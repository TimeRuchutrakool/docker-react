version: "3"

services:
  web:
    # build: . คือต้อง assume ว่าเรามี file docker อยู่นะ
    build:
      # เพื่อบอกว่า where we want all the files and folders for this image to be pulled from | ใน case นี้เราต้องการทุกไฟล์ที่อยู่ระดับเดียวกันกับ compse มาหมด
      context: .
      dockerfile: Dockerfile.dev # ภายใต้ build นี้มันก็จะไปหา file docker ที่ระบุไว้ภายใต้ folder ที่อยู่ใน context
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
      - .:/app

  tests:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - .:/app
    command: ["npm", "run", "test"]

# การ build
# Dev Env
#             ->    
# Browser           Web Conteinainer [index.html , main.js] มี dev server อยู่ browser เข้า port ที่ map กับ container กับ server ก็ได้
#             <-

# Production
# ไม่มี dev server แล้ว พอเรา build มันก็จะได้ไฟล์ bundle 1 file มา ดังนั้นเราต้องหาวิธีที่ให้ user communicate เพื่อได้ file ไปให้ได้
# ใน production เราจึงต้องการ some type of server มาแทนที่ dev server เพื่อ respond กับ server request ตรงนี้เราจึงจะใช้ server nginx
# จะทำ dockerfile ที่ contain production of our web container